<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xkx.ssm.dao.CommentMapper">
    <resultMap id="BaseResultMap" type="cn.xkx.ssm.pojo.Comment">
        <id column="comment_id" jdbcType="BIGINT" property="commentId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="article_id" jdbcType="BIGINT" property="articleId"/>
        <result column="comment_like_count" jdbcType="BIGINT" property="commentLikeCount"/>
        <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate"/>
        <result column="comment_content" jdbcType="VARCHAR" property="commentContent"/>
        <result column="comment_stair" jdbcType="BIGINT" property="commentStair"/>
        <result column="parent_commend_id" jdbcType="BIGINT" property="parentCommendId"/>
    </resultMap>

    <resultMap id="Comment_With_User" type="cn.xkx.ssm.pojo.CommentQueryVo">
        <id column="comment_id" jdbcType="BIGINT" property="commentId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="article_id" jdbcType="BIGINT" property="articleId"/>
        <result column="comment_like_count" jdbcType="BIGINT" property="commentLikeCount"/>
        <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate"/>
        <result column="comment_content" jdbcType="VARCHAR" property="commentContent"/>
        <result column="comment_stair" jdbcType="BIGINT" property="commentStair"/>
        <result column="parent_commend_id" jdbcType="BIGINT" property="parentCommendId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_photo" jdbcType="VARCHAR" property="userPhoto"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    comment_id, user_id, article_id, comment_like_count, comment_date, comment_content, 
    comment_stair, parent_commend_id
  </sql>
    <select id="selectByExample" parameterType="cn.xkx.ssm.pojo.CommentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from blog_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from blog_comment
        where comment_id = #{commentId,jdbcType=BIGINT}
    </select>
    <select id="selectAllComment" parameterType="java.lang.Long" resultMap="Comment_With_User">
        SELECT blog_comment.*,user_name,user_photo
FROM blog_comment ,blog_user ,blog_article
WHERE blog_comment.user_id = blog_user.user_id
 AND blog_comment.article_id = blog_article.article_id
 AND blog_article.article_id = #{articleId}
 ORDER BY blog_comment.comment_date

    </select>
    <select id="getCommentCount" parameterType="java.lang.Long" resultType="java.lang.Long">
        select count(*) from blog_comment where article_id = #{articleId}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="cn.xkx.ssm.pojo.CommentExample">
        delete from blog_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.xkx.ssm.pojo.Comment">
    insert into blog_comment (comment_id, user_id, article_id, 
      comment_like_count, comment_date, comment_content, 
      comment_stair, parent_commend_id)
    values (#{commentId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT}, 
      #{commentLikeCount,jdbcType=BIGINT}, #{commentDate,jdbcType=TIMESTAMP}, #{commentContent,jdbcType=VARCHAR}, 
      #{commentStair,jdbcType=BIGINT}, #{parentCommendId,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" parameterType="cn.xkx.ssm.pojo.Comment">
        insert into blog_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                comment_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="articleId != null">
                article_id,
            </if>
            <if test="commentLikeCount != null">
                comment_like_count,
            </if>
            <if test="commentDate != null">
                comment_date,
            </if>
            <if test="commentContent != null">
                comment_content,
            </if>
            <if test="commentStair != null">
                comment_stair,
            </if>
            <if test="parentCommendId != null">
                parent_commend_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                #{commentId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="articleId != null">
                #{articleId,jdbcType=BIGINT},
            </if>
            <if test="commentLikeCount != null">
                #{commentLikeCount,jdbcType=BIGINT},
            </if>
            <if test="commentDate != null">
                #{commentDate,jdbcType=TIMESTAMP},
            </if>
            <if test="commentContent != null">
                #{commentContent,jdbcType=VARCHAR},
            </if>
            <if test="commentStair != null">
                #{commentStair,jdbcType=BIGINT},
            </if>
            <if test="parentCommendId != null">
                #{parentCommendId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.xkx.ssm.pojo.CommentExample" resultType="java.lang.Long">
        select count(*) from blog_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update blog_comment
        <set>
            <if test="record.commentId != null">
                comment_id = #{record.commentId,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.articleId != null">
                article_id = #{record.articleId,jdbcType=BIGINT},
            </if>
            <if test="record.commentLikeCount != null">
                comment_like_count = #{record.commentLikeCount,jdbcType=BIGINT},
            </if>
            <if test="record.commentDate != null">
                comment_date = #{record.commentDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.commentContent != null">
                comment_content = #{record.commentContent,jdbcType=VARCHAR},
            </if>
            <if test="record.commentStair != null">
                comment_stair = #{record.commentStair,jdbcType=BIGINT},
            </if>
            <if test="record.parentCommendId != null">
                parent_commend_id = #{record.parentCommendId,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update blog_comment
        set comment_id = #{record.commentId,jdbcType=BIGINT},
        user_id = #{record.userId,jdbcType=BIGINT},
        article_id = #{record.articleId,jdbcType=BIGINT},
        comment_like_count = #{record.commentLikeCount,jdbcType=BIGINT},
        comment_date = #{record.commentDate,jdbcType=TIMESTAMP},
        comment_content = #{record.commentContent,jdbcType=VARCHAR},
        comment_stair = #{record.commentStair,jdbcType=BIGINT},
        parent_commend_id = #{record.parentCommendId,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.xkx.ssm.pojo.Comment">
        update blog_comment
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="articleId != null">
                article_id = #{articleId,jdbcType=BIGINT},
            </if>
            <if test="commentLikeCount != null">
                comment_like_count = #{commentLikeCount,jdbcType=BIGINT},
            </if>
            <if test="commentDate != null">
                comment_date = #{commentDate,jdbcType=TIMESTAMP},
            </if>
            <if test="commentContent != null">
                comment_content = #{commentContent,jdbcType=VARCHAR},
            </if>
            <if test="commentStair != null">
                comment_stair = #{commentStair,jdbcType=BIGINT},
            </if>
            <if test="parentCommendId != null">
                parent_commend_id = #{parentCommendId,jdbcType=BIGINT},
            </if>
        </set>
        where comment_id = #{commentId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.xkx.ssm.pojo.Comment">
    update blog_comment
    set user_id = #{userId,jdbcType=BIGINT},
      article_id = #{articleId,jdbcType=BIGINT},
      comment_like_count = #{commentLikeCount,jdbcType=BIGINT},
      comment_date = #{commentDate,jdbcType=TIMESTAMP},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_stair = #{commentStair,jdbcType=BIGINT},
      parent_commend_id = #{parentCommendId,jdbcType=BIGINT}
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
    <update id="addCommentLike" parameterType="java.lang.Long">
    update blog_comment
    set comment_like_count =comment_like_count+1
    where comment_id = #{commentId,jdbcType=BIGINT}
    </update>
</mapper>